generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  //directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Role {
  ADMIN
  ACCOUNTANT
  REVIEWER
}

model User {
  id             String          @id @default(uuid())
  name           String
  role           Role
  phone          String
  email          String          @unique
  password       String
  passwordResets PasswordReset[]
}

model PasswordReset {
  id        String   @id @default(uuid())
  userId    String
  token     String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId], name: "user_id_idx")
}

model Category {
  id            String     @id @default(uuid())
  name          String
  number        Int        @unique
  status        Boolean    @default(false)
  parentId      String?
  parent        Category?  @relation("CategorySubcategories", fields: [parentId], references: [id], onDelete: Cascade)
  subCategories Category[] @relation("CategorySubcategories")
  accounts      Account[]  @relation("CategoryAccounts")
}

model Account {
  id                   String        @id @default(uuid())
  name                 String        @unique
  number               Int           @unique
  email                String?
  description          String?
  categoryId           String?
  category             Category?     @relation("CategoryAccounts", fields: [categoryId], references: [id], onDelete: SetNull)
  sentTransactions     Transaction[] @relation("SentTransactions")
  receivedTransactions Transaction[] @relation("ReceivedTransactions")
}

model Transaction {
  id          String   @id @default(uuid())
  amount      Float
  description String
  number      Int      @unique
  fromId      String
  toId        String
  from        Account  @relation("SentTransactions", fields: [fromId], references: [id], onDelete: Cascade)
  to          Account  @relation("ReceivedTransactions", fields: [toId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
}
